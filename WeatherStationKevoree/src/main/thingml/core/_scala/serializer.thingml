import "../serializer.thingml"

//Defines the way the datatypes of the ThingML framework are serialized in Scala
//TODO: do it for all the remaining datatypes
thing fragment SerializerScala  includes ArraySerializer
{
    //Integer (ThingML Integer are like Java Short (16 bits = 2 bytes)    
    function serializeInteger(d : Integer)
    do
        //print("serialize integer: " + d)
        readonly var bytes : Byte[2] = '' & d & '.toBytes'
        storeByte(bytes[0])
        storeByte(bytes[1])
    end  
    
    //String                            
    function serializeString(d : String) 
    do
        readonly var stop : Integer = lengthString
        var i : Integer = 0
        while(i < stop) do
            if (i < '' & d & '.size') do
              storeByte('' & d & '(' & i & ').toByte')
              //print(i + "=" + '' & d & '(' & i & ').toByte')
            end
            if (i > '' & d & '.size' - 1) do
              storeByte(0)
              //print("Padding string")
            end
            i = i + 1
        end
    end
}

thing fragment DeserializerScala includes ArrayDeserializer {
    //Integer        
    function deserializeInteger() : Integer
    do
        var bytes : Byte[2]
        bytes[0] = readByte()
        bytes[1] = readByte()
        return bytes'.toShort'
    end
    
    //UInt16
    function deserializeUInt16() : UInt16
    do
        var bytes : Byte[2]
        bytes[0] = readByte()
        bytes[1] = readByte()
        return bytes'.toShort'
    end         

    //String                            
    function deserializeString() : String 
    do
        var result : String = ""
        readonly var stop : Integer = lengthString
        var i : Integer = 0
        while(i < stop) do
            result = result + '' & readByte() & '.toChar'
            i = i + 1
        end
        //print("deserialize = " + result)
        return result
    end
}